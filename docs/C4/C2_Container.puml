@startuml
!include <C4/C4_Container>
!define ICONS ./plantuml-icon-font-sprites
!include ICONS/common.puml
!include ICONS/font-awesome-5/graduation_cap.puml
!include ICONS/font-awesome-5/wallet.puml
!include ICONS/font-awesome-5/inbox.puml
!include ICONS/font-awesome-5/university.puml
!include ICONS/font-awesome-5/network_wired.puml
!include ICONS/font-awesome-5/chart_line.puml
!include ICONS/font-awesome-5/database.puml
!include ICONS/font-awesome-5/server.puml
!include ICONS/font-awesome-5/terminal.puml
!include ICONS/font-awesome-5/archive.puml
!include ICONS/font-awesome-5/mobile_alt.puml
!include ICONS/font-awesome-5/desktop.puml

Person(student, "Student", "Uses 'PocketUSOS' application")
Person(admin, "Admin", "Monitors and manages 'PocketUSOS' application")

System_Boundary(c1, "PocketUsos") {
    Container(api, "PocketUSOS API", ".Net Core", "Application backend", $sprite="server")
    Container(mobile_app, "Mobile application", "React Native", "GUI", $sprite="mobile_alt")
    Container(admin_console, "Administration Console", "LowCode", "Application for Admins", $sprite="terminal")
    ContainerDb(database, "Database", "PostgreSQL", "DB storage", $sprite="database")
    Container(elastic, "ElasticSearch", "elastic", "Logging engine", $sprite="archive")
    Container(kibana, "Kibana", "Kibana", "UI for ElasticSearch", $sprite="desktop")
    ContainerDb(cache, "Cache", "Redis", "Distributed cache storage", $sprite="database")
}

System_Boundary(usos, "USOS Ecosystem") {
    System_Ext(usos_api, "USOS API", "Gives access to USOS data", $sprite="network_wired")
    System_Ext(usos_web, "USOS Web", "Web portal", $sprite="desktop")
}

System_Ext(university, "University", "High school that is connected to USOS ecosystem", $sprite="university")

Rel(university, usos, "Is integrated with")
Rel(student, mobile_app, "Uses", "GUI")
Rel(student, usos_web, "Uses", "GUI")
Rel(student, university, "Studies in")
Rel(admin, admin_console, "Uses")
Rel(admin, kibana, "Uses")

Rel(mobile_app, api, "uses", "HTTP")
Rel(admin_console, api, "uses", "HTTP")

Rel(api, database, "Reads | Writes", "SQL")
Rel(api, cache, "Reads | Writes", "Redis query")
Rel(api, usos_api, "Gets students data from", "HTTP")
Rel(usos_api, api, "Updates with data", "HTTP")

Rel(kibana, elastic, "Reads from")

@enduml
